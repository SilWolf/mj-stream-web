import{H as $,I as m}from"./index-D_zi-PEm.js";const _=["name","nickname",'"portraitImage": portraitImage.asset->url','"fullBodyImage": fullBodyImage.asset->url',"designation","introduction"],u=['"slug": slug.current',"name","secondaryName","thirdName","preferredName",'"squareLogoImage": squareLogoImage.asset->url','"color": color.hex',"introduction"],f=$({projectId:"0a9a4r26",dataset:"production",useCdn:!0,apiVersion:"2023-05-03",token:void 0}),j=async(o,y)=>{const e=await f.fetch(`*[_type == "match" && _id == "${o}"]{ tournament->{_id, name, "logoUrl": logo.asset->url}, _id, name, playerEast, playerSouth, playerWest, playerNorth, playerEastTeam, playerSouthTeam, playerWestTeam, playerNorthTeam, startAt }`).then(a=>a[0]),r=await I(e.tournament._id),s=r.find(({team:a})=>{var t;return((t=e.playerEastTeam)==null?void 0:t._ref)===a._id}),c=s==null?void 0:s.players.find(({_id:a})=>{var t;return a===((t=e.playerEast)==null?void 0:t._ref)}),i=r.find(({team:a})=>{var t;return((t=e.playerSouthTeam)==null?void 0:t._ref)===a._id}),d=i==null?void 0:i.players.find(({_id:a})=>{var t;return a===((t=e.playerSouth)==null?void 0:t._ref)}),n=r.find(({team:a})=>{var t;return((t=e.playerWestTeam)==null?void 0:t._ref)===a._id}),h=n==null?void 0:n.players.find(({_id:a})=>{var t;return a===((t=e.playerWest)==null?void 0:t._ref)}),l=r.find(({team:a})=>{var t;return((t=e.playerNorthTeam)==null?void 0:t._ref)===a._id}),T=l==null?void 0:l.players.find(({_id:a})=>{var t;return a===((t=e.playerNorth)==null?void 0:t._ref)}),g=[c._id,d._id,h._id,T._id],p=await E(g,e.tournament._id);return{...e,playerEast:{...c,statistics:p[c._id]},playerSouth:{...d,statistics:p[d._id]},playerWest:{...h,statistics:p[h._id]},playerNorth:{...T,statistics:p[T._id]},playerEastTeam:{...s.team,statistics:s.statistics,players:s.players},playerSouthTeam:{...i.team,statistics:i.statistics,players:i.players},playerWestTeam:{...n.team,statistics:n.statistics,players:n.players},playerNorthTeam:{...l.team,statistics:l.statistics,players:l.players}}},E=async(o,y)=>f.fetch(`*[_type=="player" && _id in [${o.map(e=>`"${e}"`).join(",")}]]{ _id, "statistics": statistics[_key=="${y}"][0] }`).then(e=>e.reduce((r,s)=>(!s.statistics||s.statistics.matchCount<=0||(r[s._id]=s.statistics),r),{})),N=async o=>await f.fetch(`*[_type == "matchTournament" && _id == "${o}"]{ _id, name, "logoUrl": logo.asset->url, teams[]{ _key, statistics, ref->{${["_id",...u].join(", ")}}, "overrided": overrided{${[...u].join(", ")}}, players[]{ref->{${["_id",..._,`"statistics": statistics[_key=="${o}"][0]`].join(", ")}}, "overrided": overrided{${[..._].join(", ")}} } } }`).then(e=>{var r,s;return{...e[0],teams:(s=(r=e[0])==null?void 0:r.teams)==null?void 0:s.map(({ref:c,overrided:i,...d})=>({...d,team:m(c,i),players:d.players.map(n=>m(n.ref,n.overrided))}))}}),I=o=>f.fetch(`*[_type == "matchTournament" && _id == "${o}"]{ teams[]{ _key, statistics, ref->{${["_id",...u].join(", ")}}, "overrided": overrided{${[...u].join(", ")}}, players[]{ref->{${["_id",..._,`"statistics": statistics[_key=="${o}"][0]`].join(", ")}}, "overrided": overrided{${[..._].join(", ")}} } } }`).then(y=>{var e;return((e=y[0])==null?void 0:e.teams).map(({ref:r,overrided:s,...c})=>({...c,team:m(r,s),players:c.players.map(i=>m(i.ref,i.overrided))}))});export{N as a,j as b};

import { createClient } from '@sanity/client'
import { createGroqBuilder, makeSafeQueryRunner } from 'groqd'
import * as z from 'zod'

// Import Sanity types, generated by Sanity project.
import type * as SanityTypes from './sanity.types.ts'
import { buildSrc, ImageSrcInputs } from '@sanity-image/url-builder'

const sanityConfig = {
  projectId: '0a9a4r26',
  dataset: 'production',
  useCdn: true,
  apiVersion: '2023-05-03',
  token: import.meta.env.VITE_DATABASE_API_KEY,
}

const sanityClient = createClient(sanityConfig)

export const runQuery = makeSafeQueryRunner((query) =>
  sanityClient.fetch(query)
)

type SchemaConfig = {
  schemaTypes: SanityTypes.AllSanitySchemaTypes
  referenceSymbol: typeof SanityTypes.internalGroqTypeReferenceTo
}
export const q = createGroqBuilder<SchemaConfig>({})

export const urlFor = (
  assetId: string | null,
  options: Omit<ImageSrcInputs, 'id' | 'baseUrl'>
) =>
  assetId
    ? buildSrc({
        id: assetId,
        baseUrl: `https://cdn.sanity.io/images/${sanityConfig.projectId}/${sanityConfig.dataset}/`,
        ...options,
      }).src
    : null
